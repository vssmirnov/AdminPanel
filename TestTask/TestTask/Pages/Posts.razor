@page "/Posts"
@using Models
@using Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@using System.Web
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject Services.PostService PostService
@inject Services.WebCacheService WebCacheService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h2 class="title">Posts</h2>

@if (posts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!posts.Any())
{
    <p>
        <em>No recipes exist. Please add some.</em>
    </p>
}
else
{
    <div class="row">
        @foreach (var post in posts)
                {
                    <div class="col-12">
                        <div class="card" style="width: 100%;">
                            <div class="row">
                                <div class="col-3">
                                    <img src="@post.image" class="card-img-top" alt="@post.text">
                                </div>
                                <div class="col-9">
                                    <div class="card-body">
                                        <small class="mb-4">@ConvertToDateFormat(@post.publishDate)</small>
                                        <div class="mb-4">@post.text</div>
                                        <div class="card-text">
                                            <img width="25" class="w-5 mr-2 float-left" alt="like" src="https://dummyapi.io/img/like.svg">
                                            @post.likes
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
    </div>
}



@code {
    public IList<Post> posts;
    private const int lifeBuffer = 1;

    private string ConvertToDateFormat(string date)
    {
        return Convert.ToDateTime(date).ToString("F");
    }

    protected override async Task OnInitializedAsync()
    {
        string uri = NavigationManager.Uri;
        string id = uri.Substring(uri.IndexOf("?Id=")+4);
        
        posts = await WebCacheService.GetData<Post>(ProtectedLocalStore, "Post"+id, PostService.GetPostsAsync, id);

        base.OnInitialized();
    }

    private class PostCacheData
    {
        public IList<Post> Data { get; set; }
        public DateTime GetDateTime { get; set; }
    }
}