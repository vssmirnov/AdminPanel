@page "/Posts"
@using Models
@using Providers
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@using System.Web
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject Interfaces.IPostWebCacheService PostWebCacheService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h2 class="title">Posts</h2>

@if (posts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!posts.Any())
{
    <p>
        <em>No recipes exist. Please add some.</em>
    </p>
}
else
{
    <div class="row">
        @foreach (var post in posts)
            {
                <div class="col-12">
                    <div class="card" style="width: 100%;">
                        <div class="row">
                            <div class="col-3">
                                <img src="@post.Image" class="card-img-top" alt="@post.Text">
                            </div>
                            <div class="col-9">
                                <div class="card-body">
                                    <small class="mb-4">@ConvertToDateFormat(@post.PublishDate)</small>
                                    <div class="mb-4">@post.Text</div>
                                    <div class="card-text">
                                        <img width="25" class="w-5 mr-2 float-left" alt="like" src="https://dummyapi.io/img/like.svg">
                                        @post.Likes
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
    </div>
}

@code {
    public IList<Post> posts;

    private string ConvertToDateFormat(string date)
    {
        return Convert.ToDateTime(date).ToString("F");
    }

    protected override async Task OnInitializedAsync()
    {
        string uri = NavigationManager.Uri;
        string id = uri.Substring(uri.IndexOf("?Id=")+4);
        
        posts = await PostWebCacheService.GetListData("Post"+id, id);

        base.OnInitialized();
    }
}